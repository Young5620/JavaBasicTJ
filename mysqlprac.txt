#1. 테이블 emp에서 사원번호 이름 월급만 출력하세요
--------------------------------------------
SELECT empno, ename, sal
	FROM emp;
============================================

#2. 사원테이블의 모든 열을 출력하세요
----------------------------------------------
SELECT *
	FROM emp;
==============================================

#3. dept테이블의 모든 열을 출력하고 depno을 한번 더 끝에 출력
-----------------------------------------------
 SELECT *, deptno
	FROM dept;
===============================================

#4. 컬럼명 별명 사용하기
사원번호 사원이름 급여
-----------------------------------------------
SELECT empno 사원번호,
	ename 사원이름,
	sal 급여
	FROM emp;
-----------------------------------------------
SELECT empno 사원번호,
	sal*12 AS 연봉
FROM emp
ORDER BY 연봉 ASC;
===============================================

#5. 연결하기
이름ename과 급여sal를 한 셀에 붙여서 표시
-----------------------------------------------
SELECT empno || sal  -> 오라클 문법
	FROM emp;
-----------------------------------------------
SELECT CONCAT (empno,sal)  -> 오라클,mysql 둘다 쓰이는 문법
	FROM emp;
===============================================

#6. 열이름은 월급
?님의 월급은 ?입니다.
-----------------------------------------------
SELECT CONCAT (ename, ' 님의 월급은 ' ,sal, ' 입니다.') AS 월급
	FROM emp;
================================================

#7. 중복제거
emp테이블에서 job을 중복을 제거하여 출력하시오
------------------------------------------------
SELECT DISTINCT job -> MYSQL
FROM emp;
------------------------------------------------
SELECT UNIQUE job -> 오라클
FROM emp;
================================================

#8. 정렬
emp테이블에서 이름, 부서번호, 월급을 부서번호 오름차순 월급은 내림차순
-------------------------------------------------
SELECT ename, deptno, sal
FROM emp
ORDER BY deptno ASC, sal DESC;
-------------------------------------------------
SELECT ename, deptno, sal
FROM emp
ORDER BY 2 ASC, 3 DESC;
숫자로 표현할 수도 있다.
=================================================

#9. WHERE - 일치
emp테이블에서 이름, 부서번호, 월급을
월급이 3000인 사람만 출력
-------------------------------------------------
SELECT ename, deptno, sal
FROM emp
WHERE sal = 3000;
=================================================

#10. WHERE - 날짜
입사일이 82년 12월 22일인 사람
-------------------------------------------------
SELECT ename, deptno, sal, hiredate
FROM emp
WHERE hiredate = '1982-12-22';
-------------------------------------------------
입사일이 82년 12월 22일 이후 사람
SELECT ename, deptno, sal, hiredate
FROM emp
WHERE hiredate >= '1982-12-22';
==================================================

#11. 산술 연산자
연봉이 3만 6천 이상인 사원들의 이름과 연봉
--------------------------------------------------
SELECT ename, sal, sal*12 AS 연봉
FROM emp
WHERE sal*12 >= 36000;
==================================================

#12. 월급이 1000에서 3000 사이인 사원들의 이름과 월급을 출력
--------------------------------------------------
SELECT ename, sal
FROM emp
WHERE sal BETWEEN 1000 AND 3000;
==================================================

#13. like(**)
이름에서 첫 글자가 대문자 S로 시작하는 사원들의 이름과 월급
--------------------------------------------------
SELECT ename, sal
FROM emp
WHERE ename LIKE 'S%';
% <- 와일드 카드, 이자리에 어떠한 글자 몇개가 와도 상관하지 않는다.
==================================================

#14. (**)
이름에서 두 번째 글자가 m인 사람
--------------------------------------------------
SELECT ename, sal
FROM emp
WHERE ename LIKE '_M%';
==================================================

#15. (**)
이메일 확인을 위해 @가 반드시 들어가는지
--------------------------------------------------
SELECT ename, sal
FROM emp
WHERE ename LIKE '%@%';
==================================================

#16. null
데이터가 할당되지 않은 상태/알 수 없는 값('=' 쓰지못함)
그래서 is null을 사용한다.

오라클에서는 NVL( , )
mysql에서는 IFNULL( , )

comm중에서 null인 사람 출력
--------------------------------------------------
SELECT ename, comm
FROM emp
WHERE comm IS null;
--------------------------------------------------
SELECT IFNULL(comm,0) * sal
FROM emp;
comm이 null이면 null대신 0으로 교체
==================================================

#17. IN
직업이 salesman, analyst, manager인 사람들만
이름 월급 직업을 출력하세요 
--------------------------------------------------
SELECT ename, sal, job
FROM emp
WHERE job IN('salesman','analyst','manager');
--------------------------------------------------
SELECT ename, sal, job
FROM emp
WHERE job='salesman'
or job='analyst'
or job='manager';
===================================================

#18. 논리연산
직업이 salesman이고 월급이 1200이상인 사원들의 월급 직업
---------------------------------------------------
SELECT ename, sal, job
FROM emp
WHERE job='salesman' AND sal>=1200;
===================================================

#19. 이름은 전부 대문자 전부 소문자로 첫글자만 대문자로
---------------------------------------------------
SELECT 
UPPER(ename) 대문자,
LOWER(ename) 소문자,
CONCAT(UPPER(LEFT(ename,1)),LOWER(SUBSTR(ename,2))) as 첫글자대문자
FROM emp;

SUBSTRING - MYSQL
SUBSTR - ORACLE
====================================================

#20. 문자열의 길이 개수
이름을 출력하고 그 이름의 글자의 수를 출력
----------------------------------------------------
SELECT 
ename AS 이름,
LENGTH(ename) 글자의수
FROM emp;
=====================================================

#21. replace : 특정 문자를 다른 문자로 변경
이름에서 첫글자만 남기고 나머지는 전부 '*'로 변경하시오
-----------------------------------------------------
SELECT 
ename AS 이름,
REPLACE(ename,SUBSTRING(ename,2),'*') AS 보안이름,
REPLACE(job,SUBSTRING(job,4),'*') AS 직업,
REPLACE(sal*12,SUBSTRING(sal*12,2),'*') AS 연봉
FROM emp;
=====================================================

#22. lpad&rpad
이름과 월급을 출력하는데 월급을 자리수를 10개로 하고 월급을 출력하고 나머지는 '*'로 채워서 출력
------------------------------------------------------
SELECT 
ename AS 이름,
LPAD(sal,10,'*') AS 월급
FROM emp;
======================================================

#23. lpad&rpad
이름과 월급을 출력하는데 월급100마다 ■로 표현
------------------------------------------------------
SELECT 
	ename AS 이름,
	rpad(sal,round(sal/100)+LENGTH(sal),'■') AS 월급,
	LPAD('■', ROUND(sal/100),'■') 그림으로표현
FROM emp;
------------------------------------------------------

#round(대상,자리수) - 기본은 소수점 아래 1자리에서 소수점 위로 반올림
#trunc(대상,자리수) - 기본은 소수점 아래 1자리에서 버림 ->Oracle에서만 쓰이는 문법
#truncat(대상,자리수) - 기본은 소수점 아래 1자리에서 버림 ->MySQL
========================================================

#24.
사원번호가 홀수이면 1, 짝수이면 0을 출력하세요
--------------------------------------------------------
SELECT 
	empno 사원번호,
	MOD(empno, 2) 홀짝
FROM emp;
--------------------------------------------------------
사원번호가 홀수인 사람들의 명단
SELECT 
	empno 사원번호,
	ename 사원이름
FROM emp
WHERE MOD(empno,2)=1;
--------------------------------------------------------
2의배수와 6의배수인사람의 명단
SELECT 
	empno 사원번호,
	ename 사원이름
FROM emp
WHERE MOD(empno,2)=0
OR MOD(empno,6)=0;
---------------------------------------------------------
이름을 출력하고 일사일부터 오늘까지 총 몇 달을 근무했는지
========================================================

#25. 날짜간 개월수 차이 출력하기
이름을 출력하고 일사일부터 오늘까지 총 몇 달을 근무했는지 입력하세요
---------------------------------------------------------
SELECT 
	ename 사원이름,
	hiredate 입사일,
	TIMESTAMPDIFF(YEAR,hiredate,CURDATE()) AS 근무년수,
	TIMESTAMPDIFF(MONTH,hiredate,CURDATE()) AS 근무달수,
	TIMESTAMPDIFF(WEEK,hiredate,CURDATE()) AS 근무주수,
	TIMESTAMPDIFF(DAY,hiredate,CURDATE()) AS 근무일수
FROM emp;

#NOW() : 현재 날짜와 시간
#CURDATE() : 현재 날짜
==========================================================

#26. INSERT
INSERT INTO testtb VALUES(1,'우디',25);
INSERT INTO testtb (toy_id,toy_name)VALUES(2,'버즈');
#자동증가 AUTO_INCREMENT : 1부터 증가하는 값을 자동으로 입력해준다.
주의할 점은 AUTO_INCREMENT지정하는 열은 반드시 PRIMARY키를 지정해야만한다.

ALTER TABLE testtb2 AUTO_INCREMENT=100; AUTO_INCREMENT가 100부터 시작
INSERT INTO testtb2 VALUES(NULL,'태지',24);
SET @@auto_increment_increment=3; AUTO_INCREMENT가 하나입력했을때 3증가

SELECT COUNT(*)
	FROM testtb2; ->테이블개수 세기

DESC SQLDB.testtb2; ->DB현황보기

SELECT *
	FROM testtb2 LIMIT 3; -> 열의 개수를 제한해서 보기

#테이블을 테이블로 보내기
CREATE TABLE testtb3 (NAME VARCHAR(5), age INT);
INSERT INTO testtb3 
	SELECT toy_name, age FROM testtb2;

========================================================
#UPDATE 데이터수정
UPDATE testtb2
	SET toy_name = '서울'
	WHERE toy_name = '영희';
SELECT * FROM testtb2 WHERE toy_id=1;

UPDATE testtb3
	SET NAME = '대구';
SELECT * FROM testtb3 LIMIT 3;
전부가 아니라 3개까지만 이름을 전부 대구로 바꿈
=========================================================
#DELETE 데이터삭제



















